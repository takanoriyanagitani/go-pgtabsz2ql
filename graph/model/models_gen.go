// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

// Root query type – expose whatever endpoints you need.
// These are only illustrative; feel free to add more fields or mutations as required.
type Query struct {
}

// Information about a table that can be queried in the database.
type TableInfo struct {
	// The schema (namespace) the table belongs to.
	TableSchema string `json:"tableSchema"`
	// The name of the table.
	TableName string `json:"tableName"`
	// The size info of the table.
	TableSize *TableSizeInfo `json:"tableSize,omitempty"`
}

// Detailed size statistics for a table.
type TableSizeInfo struct {
	// The PostgreSQL object identifier (OID) for the table.
	Oid string `json:"oid"`
	// Estimated number of rows in the table.
	RowEstimate float64 `json:"rowEstimate"`
	// Total disk space used by the table (including toast data) in bytes.
	TotalBytes int64 `json:"totalBytes"`
	// Disk space used by indexes for the table in bytes.
	IndexBytes int64 `json:"indexBytes"`
	// Disk space used by toast tables in bytes.
	// This field is nullable because toast tables may not exist for the table.
	ToastBytes *int64 `json:"toastBytes,omitempty"`
	// The name of the schema.
	TableSchema string `json:"tableSchema"`
	// The name of the table.
	TableName string `json:"tableName"`
}

// Parameters for querying a collection of table size statistics.
type TableSizeInput struct {
	// SQL‑style pattern (e.g. `public.%`) used to match schema names.
	SchemaPattern string `json:"schemaPattern"`
	// Optional list of specific table names to return.
	// If omitted or empty, the query will return size info for all matching tables.
	TableNames []string `json:"tableNames,omitempty"`
}

// Parameters for querying a collection of tables.
type TablesInput struct {
	// SQL‑style pattern to match schema names.
	SchemaPattern string `json:"schemaPattern"`
	// SQL‑style pattern to match table names.
	TablePattern string `json:"tablePattern"`
}
