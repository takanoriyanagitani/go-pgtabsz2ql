package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"

	"github.com/takanoriyanagitani/go-pgtabsz2ql/graph/model"
)

// Tables is the resolver for the tables field.
func (r *queryResolver) Tables(ctx context.Context, input model.TablesInput) ([]*model.TableInfo, error) {
	return r.Resolver.ToPartialTables(ctx, input)
}

// TableSize is the resolver for the tableSize field.
func (r *tableInfoResolver) TableSize(ctx context.Context, obj *model.TableInfo) (*model.TableSizeInfo, error) {
	sl, ok := ctx.Value(sizeLoaderKey).(SizeLoader)
	if !ok {
		return nil, ErrSizeLoaderNotDefined
	}
	return sl.GetSize(ctx, obj)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// TableInfo returns TableInfoResolver implementation.
func (r *Resolver) TableInfo() TableInfoResolver { return &tableInfoResolver{r} }

type queryResolver struct{ *Resolver }
type tableInfoResolver struct{ *Resolver }
